{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let CarrinhoService = /*#__PURE__*/(() => {\n  class CarrinhoService {\n    constructor() {\n      this.itensCarrinho = [];\n      this.itensCarrinhoSubject = new BehaviorSubject([]);\n      this.itensCarrinho$ = this.itensCarrinhoSubject.asObservable();\n    }\n    adicionarItem(produto, quantidade = 1) {\n      const itemExistente = this.itensCarrinho.find(item => item.produto.id === produto.id);\n      if (itemExistente) {\n        itemExistente.quantidade += quantidade;\n      } else {\n        this.itensCarrinho.push({\n          produto,\n          quantidade\n        });\n      }\n      this.itensCarrinhoSubject.next([...this.itensCarrinho]);\n    }\n    removerItem(produtoId) {\n      this.itensCarrinho = this.itensCarrinho.filter(item => item.produto.id !== produtoId);\n      this.itensCarrinhoSubject.next([...this.itensCarrinho]);\n    }\n    atualizarQuantidade(produtoId, quantidade) {\n      const item = this.itensCarrinho.find(item => item.produto.id === produtoId);\n      if (item) {\n        item.quantidade = quantidade;\n        this.itensCarrinhoSubject.next([...this.itensCarrinho]);\n      }\n    }\n    limparCarrinho() {\n      this.itensCarrinho = [];\n      this.itensCarrinhoSubject.next([]);\n    }\n    obterItens() {\n      return [...this.itensCarrinho];\n    }\n    obterTotal() {\n      return this.itensCarrinho.reduce((total, item) => total + item.produto.precoBase * item.quantidade, 0);\n    }\n    obterQuantidadeTotal() {\n      return this.itensCarrinho.reduce((total, item) => total + item.quantidade, 0);\n    }\n    static {\n      this.ɵfac = function CarrinhoService_Factory(t) {\n        return new (t || CarrinhoService)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: CarrinhoService,\n        factory: CarrinhoService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return CarrinhoService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}