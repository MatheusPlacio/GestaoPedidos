{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.apiUrl;\n  }\n  // Produtos\n  obterProdutos() {\n    return this.http.get(`${this.baseUrl}/Produto`);\n  }\n  obterProdutosComEstoque() {\n    return this.http.get(`${this.baseUrl}/Produto/com-estoque`);\n  }\n  criarProduto(produto) {\n    return this.http.post(`${this.baseUrl}/Produto`, produto);\n  }\n  atualizarProduto(id, produto) {\n    return this.http.put(`${this.baseUrl}/Produto/${id}`, produto);\n  }\n  excluirProduto(id) {\n    return this.http.delete(`${this.baseUrl}/Produto/${id}`);\n  }\n  // Pedidos\n  obterPedidos() {\n    return this.http.get(`${this.baseUrl}/Pedido`);\n  }\n  criarPedido(pedido) {\n    return this.http.post(`${this.baseUrl}/Pedido`, pedido);\n  }\n  obterPedidoPorId(id) {\n    return this.http.get(`${this.baseUrl}/Pedido/${id}`);\n  }\n  confirmarPedido(id) {\n    return this.http.put(`${this.baseUrl}/Pedido/${id}/confirmar`, {});\n  }\n  cancelarPedido(id) {\n    return this.http.put(`${this.baseUrl}/Pedido/${id}/cancelar`, {});\n  }\n  static {\n    this.ɵfac = function ApiService_Factory(t) {\n      return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ApiService,\n      factory: ApiService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","ApiService","constructor","http","baseUrl","apiUrl","obterProdutos","get","obterProdutosComEstoque","criarProduto","produto","post","atualizarProduto","id","put","excluirProduto","delete","obterPedidos","criarPedido","pedido","obterPedidoPorId","confirmarPedido","cancelarPedido","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\mathe\\source\\repos\\GestaoPedidos\\GestaoPedidos.Angular\\src\\app\\services\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Produto, ResultDto } from '../models/produto.model';\nimport { Pedido, CriarPedido } from '../models/pedido.model';\nimport { Promocao, CriarPromocao, AtualizarPromocao } from '../models/promocao.model';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private readonly baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  // Produtos\n  obterProdutos(): Observable<ResultDto<Produto[]>> {\n    return this.http.get<ResultDto<Produto[]>>(`${this.baseUrl}/Produto`);\n  }\n\n  obterProdutosComEstoque(): Observable<ResultDto<Produto[]>> {\n    return this.http.get<ResultDto<Produto[]>>(`${this.baseUrl}/Produto/com-estoque`);\n  }\n\n  criarProduto(produto: any): Observable<ResultDto<number>> {\n    return this.http.post<ResultDto<number>>(`${this.baseUrl}/Produto`, produto);\n  }\n\n  atualizarProduto(id: number, produto: any): Observable<ResultDto<any>> {\n    return this.http.put<ResultDto<any>>(`${this.baseUrl}/Produto/${id}`, produto);\n  }\n\n  excluirProduto(id: number): Observable<ResultDto<any>> {\n    return this.http.delete<ResultDto<any>>(`${this.baseUrl}/Produto/${id}`);\n  }\n\n  // Pedidos\n  obterPedidos(): Observable<ResultDto<Pedido[]>> {\n    return this.http.get<ResultDto<Pedido[]>>(`${this.baseUrl}/Pedido`);\n  }\n\n  criarPedido(pedido: CriarPedido): Observable<ResultDto<number>> {\n    return this.http.post<ResultDto<number>>(`${this.baseUrl}/Pedido`, pedido);\n  }\n\n  obterPedidoPorId(id: number): Observable<ResultDto<Pedido>> {\n    return this.http.get<ResultDto<Pedido>>(`${this.baseUrl}/Pedido/${id}`);\n  }\n\n  confirmarPedido(id: number): Observable<ResultDto<any>> {\n    return this.http.put<ResultDto<any>>(`${this.baseUrl}/Pedido/${id}/confirmar`, {});\n  }\n\n  cancelarPedido(id: number): Observable<ResultDto<any>> {\n    return this.http.put<ResultDto<any>>(`${this.baseUrl}/Pedido/${id}/cancelar`, {});\n  }\n}\n"],"mappings":"AAMA,SAASA,WAAW,QAAQ,gCAAgC;;;AAK5D,OAAM,MAAOC,UAAU;EAGrBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFP,KAAAC,OAAO,GAAGJ,WAAW,CAACK,MAAM;EAEL;EAExC;EACAC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAuB,GAAG,IAAI,CAACH,OAAO,UAAU,CAAC;EACvE;EAEAI,uBAAuBA,CAAA;IACrB,OAAO,IAAI,CAACL,IAAI,CAACI,GAAG,CAAuB,GAAG,IAAI,CAACH,OAAO,sBAAsB,CAAC;EACnF;EAEAK,YAAYA,CAACC,OAAY;IACvB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAoB,GAAG,IAAI,CAACP,OAAO,UAAU,EAAEM,OAAO,CAAC;EAC9E;EAEAE,gBAAgBA,CAACC,EAAU,EAAEH,OAAY;IACvC,OAAO,IAAI,CAACP,IAAI,CAACW,GAAG,CAAiB,GAAG,IAAI,CAACV,OAAO,YAAYS,EAAE,EAAE,EAAEH,OAAO,CAAC;EAChF;EAEAK,cAAcA,CAACF,EAAU;IACvB,OAAO,IAAI,CAACV,IAAI,CAACa,MAAM,CAAiB,GAAG,IAAI,CAACZ,OAAO,YAAYS,EAAE,EAAE,CAAC;EAC1E;EAEA;EACAI,YAAYA,CAAA;IACV,OAAO,IAAI,CAACd,IAAI,CAACI,GAAG,CAAsB,GAAG,IAAI,CAACH,OAAO,SAAS,CAAC;EACrE;EAEAc,WAAWA,CAACC,MAAmB;IAC7B,OAAO,IAAI,CAAChB,IAAI,CAACQ,IAAI,CAAoB,GAAG,IAAI,CAACP,OAAO,SAAS,EAAEe,MAAM,CAAC;EAC5E;EAEAC,gBAAgBA,CAACP,EAAU;IACzB,OAAO,IAAI,CAACV,IAAI,CAACI,GAAG,CAAoB,GAAG,IAAI,CAACH,OAAO,WAAWS,EAAE,EAAE,CAAC;EACzE;EAEAQ,eAAeA,CAACR,EAAU;IACxB,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAiB,GAAG,IAAI,CAACV,OAAO,WAAWS,EAAE,YAAY,EAAE,EAAE,CAAC;EACpF;EAEAS,cAAcA,CAACT,EAAU;IACvB,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAiB,GAAG,IAAI,CAACV,OAAO,WAAWS,EAAE,WAAW,EAAE,EAAE,CAAC;EACnF;;;uBA7CWZ,UAAU,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAVzB,UAAU;MAAA0B,OAAA,EAAV1B,UAAU,CAAA2B,IAAA;MAAAC,UAAA,EAFT;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}