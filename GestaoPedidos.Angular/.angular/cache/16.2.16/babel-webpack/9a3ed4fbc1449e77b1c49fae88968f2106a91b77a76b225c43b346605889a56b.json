{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class CarrinhoService {\n  constructor() {\n    this.itensCarrinho = [];\n    this.itensCarrinhoSubject = new BehaviorSubject([]);\n    this.itensCarrinho$ = this.itensCarrinhoSubject.asObservable();\n  }\n  adicionarItem(produto, quantidade = 1) {\n    const itemExistente = this.itensCarrinho.find(item => item.produto.id === produto.id);\n    if (itemExistente) {\n      itemExistente.quantidade += quantidade;\n    } else {\n      this.itensCarrinho.push({\n        produto,\n        quantidade\n      });\n    }\n    this.itensCarrinhoSubject.next([...this.itensCarrinho]);\n  }\n  removerItem(produtoId) {\n    this.itensCarrinho = this.itensCarrinho.filter(item => item.produto.id !== produtoId);\n    this.itensCarrinhoSubject.next([...this.itensCarrinho]);\n  }\n  atualizarQuantidade(produtoId, quantidade) {\n    const item = this.itensCarrinho.find(item => item.produto.id === produtoId);\n    if (item) {\n      item.quantidade = quantidade;\n      this.itensCarrinhoSubject.next([...this.itensCarrinho]);\n    }\n  }\n  limparCarrinho() {\n    this.itensCarrinho = [];\n    this.itensCarrinhoSubject.next([]);\n  }\n  obterTotal() {\n    return this.itensCarrinho.reduce((total, item) => total + (item.produto.precoFinal || item.produto.precoBase) * item.quantidade, 0);\n  }\n  obterQuantidadeTotal() {\n    return this.itensCarrinho.reduce((total, item) => total + item.quantidade, 0);\n  }\n  static {\n    this.ɵfac = function CarrinhoService_Factory(t) {\n      return new (t || CarrinhoService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CarrinhoService,\n      factory: CarrinhoService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","CarrinhoService","constructor","itensCarrinho","itensCarrinhoSubject","itensCarrinho$","asObservable","adicionarItem","produto","quantidade","itemExistente","find","item","id","push","next","removerItem","produtoId","filter","atualizarQuantidade","limparCarrinho","obterTotal","reduce","total","precoFinal","precoBase","obterQuantidadeTotal","factory","ɵfac","providedIn"],"sources":["C:\\Users\\mathe\\source\\repos\\GestaoPedidos\\GestaoPedidos.Angular\\src\\app\\services\\carrinho.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { ItemCarrinho } from '../models/pedido.model';\r\nimport { Produto } from '../models/produto.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CarrinhoService {\r\n  private itensCarrinho: ItemCarrinho[] = [];\r\n  private itensCarrinhoSubject = new BehaviorSubject<ItemCarrinho[]>([]);\r\n\r\n  itensCarrinho$ = this.itensCarrinhoSubject.asObservable();\r\n\r\n  adicionarItem(produto: Produto, quantidade: number = 1) {\r\n    const itemExistente = this.itensCarrinho.find(item => item.produto.id === produto.id);\r\n\r\n    if (itemExistente) {\r\n      itemExistente.quantidade += quantidade;\r\n    } else {\r\n      this.itensCarrinho.push({ produto, quantidade });\r\n    }\r\n\r\n    this.itensCarrinhoSubject.next([...this.itensCarrinho]);\r\n  }\r\n\r\n  removerItem(produtoId: number) {\r\n    this.itensCarrinho = this.itensCarrinho.filter(item => item.produto.id !== produtoId);\r\n    this.itensCarrinhoSubject.next([...this.itensCarrinho]);\r\n  }\r\n\r\n  atualizarQuantidade(produtoId: number, quantidade: number) {\r\n    const item = this.itensCarrinho.find(item => item.produto.id === produtoId);\r\n    if (item) {\r\n      item.quantidade = quantidade;\r\n      this.itensCarrinhoSubject.next([...this.itensCarrinho]);\r\n    }\r\n  }\r\n\r\n  limparCarrinho() {\r\n    this.itensCarrinho = [];\r\n    this.itensCarrinhoSubject.next([]);\r\n  }\r\n\r\n\r\n  obterTotal(): number {\r\n    return this.itensCarrinho.reduce((total, item) =>\r\n      total + ((item.produto.precoFinal || item.produto.precoBase) * item.quantidade), 0\r\n    );\r\n  }\r\n\r\n  obterQuantidadeTotal(): number {\r\n    return this.itensCarrinho.reduce((total, item) => total + item.quantidade, 0);\r\n  }\r\n}\r\n"],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAOtC,OAAM,MAAOC,eAAe;EAH5BC,YAAA;IAIU,KAAAC,aAAa,GAAmB,EAAE;IAClC,KAAAC,oBAAoB,GAAG,IAAIJ,eAAe,CAAiB,EAAE,CAAC;IAEtE,KAAAK,cAAc,GAAG,IAAI,CAACD,oBAAoB,CAACE,YAAY,EAAE;;EAEzDC,aAAaA,CAACC,OAAgB,EAAEC,UAAA,GAAqB,CAAC;IACpD,MAAMC,aAAa,GAAG,IAAI,CAACP,aAAa,CAACQ,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACJ,OAAO,CAACK,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;IAErF,IAAIH,aAAa,EAAE;MACjBA,aAAa,CAACD,UAAU,IAAIA,UAAU;KACvC,MAAM;MACL,IAAI,CAACN,aAAa,CAACW,IAAI,CAAC;QAAEN,OAAO;QAAEC;MAAU,CAAE,CAAC;;IAGlD,IAAI,CAACL,oBAAoB,CAACW,IAAI,CAAC,CAAC,GAAG,IAAI,CAACZ,aAAa,CAAC,CAAC;EACzD;EAEAa,WAAWA,CAACC,SAAiB;IAC3B,IAAI,CAACd,aAAa,GAAG,IAAI,CAACA,aAAa,CAACe,MAAM,CAACN,IAAI,IAAIA,IAAI,CAACJ,OAAO,CAACK,EAAE,KAAKI,SAAS,CAAC;IACrF,IAAI,CAACb,oBAAoB,CAACW,IAAI,CAAC,CAAC,GAAG,IAAI,CAACZ,aAAa,CAAC,CAAC;EACzD;EAEAgB,mBAAmBA,CAACF,SAAiB,EAAER,UAAkB;IACvD,MAAMG,IAAI,GAAG,IAAI,CAACT,aAAa,CAACQ,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACJ,OAAO,CAACK,EAAE,KAAKI,SAAS,CAAC;IAC3E,IAAIL,IAAI,EAAE;MACRA,IAAI,CAACH,UAAU,GAAGA,UAAU;MAC5B,IAAI,CAACL,oBAAoB,CAACW,IAAI,CAAC,CAAC,GAAG,IAAI,CAACZ,aAAa,CAAC,CAAC;;EAE3D;EAEAiB,cAAcA,CAAA;IACZ,IAAI,CAACjB,aAAa,GAAG,EAAE;IACvB,IAAI,CAACC,oBAAoB,CAACW,IAAI,CAAC,EAAE,CAAC;EACpC;EAGAM,UAAUA,CAAA;IACR,OAAO,IAAI,CAAClB,aAAa,CAACmB,MAAM,CAAC,CAACC,KAAK,EAAEX,IAAI,KAC3CW,KAAK,GAAI,CAACX,IAAI,CAACJ,OAAO,CAACgB,UAAU,IAAIZ,IAAI,CAACJ,OAAO,CAACiB,SAAS,IAAIb,IAAI,CAACH,UAAW,EAAE,CAAC,CACnF;EACH;EAEAiB,oBAAoBA,CAAA;IAClB,OAAO,IAAI,CAACvB,aAAa,CAACmB,MAAM,CAAC,CAACC,KAAK,EAAEX,IAAI,KAAKW,KAAK,GAAGX,IAAI,CAACH,UAAU,EAAE,CAAC,CAAC;EAC/E;;;uBA7CWR,eAAe;IAAA;EAAA;;;aAAfA,eAAe;MAAA0B,OAAA,EAAf1B,eAAe,CAAA2B,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}